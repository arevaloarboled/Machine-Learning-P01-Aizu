? data.frame
q
quit
q()
Sys.setenv(LANG = "en")
library(class)
library(caret)
data=read.csv("iris.data",header=FALSE)
index = createDataPartition(data$V5, p = .8, list = F)
train_data=data[index,]
test_data=data[-index,]
colnames(train_data)
colnames(train_data)[0:4]
q()
Sys.setenv(LANG = "en")
Sys.setenv(LANG = "en")
library(class)
library(caret)
data=read.csv("iris.data",header=FALSE)
index = createDataPartition(data$V5, p = .8, list = F)
train_data=data[index,]
test_data=data[-index,]
train=data.matrix(train_data[,colnames(train_data)[0:4]])
test=data.matrix(test_data[,colnames(test_data)[0:4]])
train_label=factor(train_data[,"V5"])
test_label=test_data$V5
codebook=lvqinit(train,train_label)
buildcode=olvq1(train,train_label,codebook)
buildcode
predict=lvqtest(buildcode,test)
predict
confusionMatrix(test_label,predict)
test
train
train_label
test_label
buildcode
codebook
train
predict
confusionMatrix(test_label,predict)
buildcode
q()
Sys.setenv(LANG = "en")
library(class)
#data=read.csv("bank-additional.csv",sep=";")
data=read.csv("iris.data",header=FALSE)
##encode variables
#library(caret)
#dmy <- dummyVars(" ~ .", data = data)
#trsf <- data.frame(predict(dmy, newdata = data))
#write.csv(trsf,"output.csv")
##knn
idxs <- sample(1:nrow(data),as.integer(0.7*nrow(data)))
train <- data[idxs,]
test <- data[-idxs,]
data
cl=factor(train$V5)
nn=knn(train,test,factor(cl))
train
factor(train$V5)
nn=knn(train,test,factor(cl))
q()
