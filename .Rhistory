install.packages(caret)
q()
Sys.setenv(LANG = "en")
##Libraries
library(class)
library(caret)
ds="car"
#ds="iris"
train_data=read.csv(paste(ds,"/train.csv",sep=""))
test_data=read.csv(paste(ds,"/test.csv",sep=""))
i=colnames(train_data)[length(colnames(train_data))]
train_label=factor(train_data[,i])
test_label=factor(test_data[,i])
train=data.matrix(train_data[,colnames(train_data)[0:(length(colnames(train_data))-1)]])
test=data.matrix(test_data[,colnames(test_data)[0:(length(colnames(test_data))-1)]])
##Make the codebook
#codebook=lvqinit(train,train_label)
#codebook=lvqinit(train,train_label,prior=rep(1/length(unique(train_label)),length(unique(train_label))))
#codebook=lvqinit(train,train_label,size=length(unique(train_label))*4,prior=rep(1/length(unique(train_label)),length(unique(train_label))))
#codebook=lvqinit(train,train_label,size=length(unique(train_label))*4)
codebook=lvqinit(train,train_label,size=length(unique(train_label))*2,prior=rep(1/length(unique(train_label)),length(unique(train_label))),k=7)
#codebook
##Train the codebook
buildcode=olvq1(train,train_label,codebook)
##Test
predict=lvqtest(buildcode,test)
##Matrix confusion
cfm=confusionMatrix(test_label,predict)
cfm
test_data
length(unique(train_data$V7))
table(train_data$V7)
cfm
train_data[,train_data$V7=="good"]
train_data[train_data$V7=="good"]$V7
train_data[train_data$V7=="good"]$V7
train_data[train_data$V7=="good"]
train_data[train_data$V7=="good",]
count(train_data[train_data$V7=="good",])
dim(train_data[train_data$V7=="good",])
table(train_data$V7)
dim(train_data[train_data$V7=="unacc",])
table(test_data$V7)
mfc
mcf
cfm
q()
