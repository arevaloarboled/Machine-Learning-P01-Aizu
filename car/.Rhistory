Sys.setenv(LANG = "en")
library(class)
data=read.csv("car.data",header=FALSE)
model.matrix(data)
model.matrix(~data)
data
factor(data$V7)
factor(data$V7,levels=)
tmp=factor(data$V7)
tmp.Levels
tmp$Levels
tmp
unique(data$V7)
factor(data$V7,levels=unique(data$V7),labels1:4)
factor(data$V7,levels=unique(data$V7),labels=1:4)
unique(data$V7)
factor(data$V7)
for (i in colnames(data)) {
if(not all(is.number(data[,i]))){
}
data[,i]=factor(data[,i],lavels=1:size(unique(data[,i])),labels=unique(data[,i]))
}
all(is.number(data[,data$V7]))
all(is.numeric(data[,data$V7]))
all(is.numeric(data[,data$V3]))
all(is.numeric(data[,V3]))
all(is.numeric(data[,"V3"]))
data$V3
for (i in colnames(data)) {
if(not all(is.numeric(data[,i]))){
}
data[,i]=factor(data[,i],lavels=1:size(unique(data[,i])),labels=unique(data[,i]))
}
for (i in colnames(data)) {
if(! all(is.numeric(data[,i]))){
data[,i]=factor(data[,i],lavels=1:size(unique(data[,i])),labels=unique(data[,i]))
}
}
data
for (i in colnames(data)) {
if(! all(is.numeric(data[,i]))){
data[,i]=factor(data[,i],levels=1:size(unique(data[,i])))
}
}
size(unique(data[,"V7"]))
length(unique(data[,"V7"]))
for (i in colnames(data)) {
if(! all(is.numeric(data[,i]))){
data[,i]=factor(data[,i],levels=1:length(unique(data[,i])),labels=unique(data[,i]))
}
}
data
data=read.csv("car.data",header=FALSE)
data[,"V7"]=factor(data[,"V7"],levels=1:length(unique(data[,"V7"])),labels=unique(data[,"V7"]))
data
data=read.csv("car.data",header=FALSE)
factor(data[,"V7"],levels=1:length(unique(data[,"V7"])),labels=unique(data[,"V7"]))
1:length(unique(data$V7))
unique(data$V7)
unique(data$V7)[0]
matrix(unique(data$V7))
c(unique(data$V7))
list(unique(data$V7))
list(unique(data$V7))[1]
list(unique(data$V7))[2]
c(matrix(unique(data$V7)))
factor(data[,"V7"],levels=1:length(unique(data[,"V7"])),labels=c(matrix(unique(data[,"V7"]))))
c(matrix(unique(data$V7)))
data$V7
data=read.csv("car.data",header=FALSE)
data$V7
factor(data[,"V7"],levels=1:length(unique(data[,"V7"])),labels=c(matrix(unique(data[,"V7"]))))
factor(c(matrix(data[,"V7"])),levels=1:length(unique(data[,"V7"])),labels=c(matrix(unique(data[,"V7"]))))
c(matrix(data$V7))
1:length(unique(data[,"V7"]))
factor(data$V7,levels=unique(data$V7),labels=1:4)
factor(data[,"V7"],levels=c(matrix(unique(data[,"V7"]))))
factor(data[,"V7"],levels=c(matrix(unique(data[,"V7"]))),labels=1:length(unique(data[,"V7"])))
data[,i]=factor(data[,i],levels=c(matrix(unique(data[,i]))),labels=1:length(unique(data[,i])))
data
for (i in colnames(data)) {
if(! all(is.numeric(data[,i]))){
data[,i]=factor(data[,i],levels=c(matrix(unique(data[,i]))),labels=1:length(unique(data[,i])))
#data[,"V7"]=factor(c(matrix(data[,"V7"])),levels=1:length(unique(data[,"V7"])),labels=c(matrix(unique(data[,"V7"]))))
#data[,"V7"]=factor(data[,"V7"],levels=c(matrix(unique(data[,"V7"]))),labels=1:length(unique(data[,"V7"])))
}
}
data
q()
data=read.csv("car.data",header=FALSE)
length(colnames(data))-1
0:length(colnames(data))-1
q()
Sys.setenv(LANG = "en")
library(class)
library(caret)
data=read.csv("car.data",header=FALSE)
ordinal_data=data
to_predic=""
for (i in colnames(data)) {
if(! all(is.numeric(data[,i]))){
ordinal_data[,i]=factor(data[,i],levels=c(matrix(unique(data[,i]))),labels=1:length(unique(data[,i])))
#data[,"V7"]=factor(c(matrix(data[,"V7"])),levels=1:length(unique(data[,"V7"])),labels=c(matrix(unique(data[,"V7"]))))
#data[,"V7"]=factor(data[,"V7"],levels=c(matrix(unique(data[,"V7"]))),labels=1:length(unique(data[,"V7"])))
}
p=i
}
index = createDataPartition(data[,i], p = .8, list = F)
train_data=ordinal_data[index,]
test_data=ordinal_data[-index,]
train=data.matrix(train_data[,colnames(train_data)[0:(length(colnames(data))-1)]])
test=data.matrix(test_data[,colnames(test_data)[0:(length(colnames(data))-1)]])
train_label=factor(train_data$i)
test_label=factor(test_data$i)
train_label
i
train_label=factor(train_data[,i])
test_label=factor(test_data[,i])
codebook=lvqinit(train,train_label)
buildcode=olvq1(train,train_label,codebook)
buildcode
predict=lvqtest(buildcode,test)
predict
confusionMatrix(test_label,predict)
q()
Sys.setenv(LANG = "en")
library(class)
library(caret)
data=read.csv("car.data",header=FALSE)
ordinal_data=data
to_predic=""
for (i in colnames(data)) {
if(! all(is.numeric(data[,i]))){
ordinal_data[,i]=factor(data[,i],levels=c(matrix(unique(data[,i]))),labels=1:length(unique(data[,i])))
#data[,"V7"]=factor(c(matrix(data[,"V7"])),levels=1:length(unique(data[,"V7"])),labels=c(matrix(unique(data[,"V7"]))))
#data[,"V7"]=factor(data[,"V7"],levels=c(matrix(unique(data[,"V7"]))),labels=1:length(unique(data[,"V7"])))
}
p=i
}
index = createDataPartition(data[,i], p = .8, list = F)
train_data=ordinal_data[index,]
test_data=ordinal_data[-index,]
train=data.matrix(train_data[,colnames(train_data)[0:(length(colnames(data))-1)]])
test=data.matrix(test_data[,colnames(test_data)[0:(length(colnames(data))-1)]])
train_label=factor(data[index,i])
test_label=factor(data[-index,i])
codebook=lvqinit(train,train_label)
buildcode=olvq1(train,train_label,codebook)
buildcode
predict=lvqtest(buildcode,test)
predict
test_label
predic
predict
test_label
predict
test_label
predict
confusionMatrix(test_label,predict)
q()
